<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cjj.stuspringbootdemo.dao.PermissionMapper" >
  <resultMap id="BaseResultMap" type="com.cjj.stuspringbootdemo.domain.Permission" >
  <id column="id" property="id" jdbcType="INTEGER" />
  <result column="permission" property="permission" jdbcType="VARCHAR" />
    <result column="role_id" property="role_id" jdbcType="INTEGER" />
</resultMap>
  <sql id="Base_Column_List" >
    id, permission, role_id
  </sql>

  <delete id="deletPermissionById" parameterType="java.lang.Integer" >
    delete from permission
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.cjj.stuspringbootdemo.domain.Permission" >
    insert into permission (id, permission, role_id
      )
    values (#{id,jdbcType=INTEGER}, #{permission,jdbcType=VARCHAR},#{role_id,jdbcType=INTEGER}
      )
  </insert>

  <select id="selectPermissionById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from Permission
    where id = #{id,jdbcType=INTEGER}
  </select>


  <update id="updatePermissionById" parameterType="com.cjj.stuspringbootdemo.domain.Permission" >
    update permission
    <set>
      <if test="permission != null" >
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="role_id != null" >
        role_id = #{role_id,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
<!--
  <update id="updateUserById" parameterType="com.cjj.stuspringbootdemo.domain.User" >
    update user
    <set>
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      SAL = #{sal,jdbcType=DOUBLE},
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>-->
</mapper>